provider "aws" {
       region = "us-west-2"
       access_key = "AKIAUD7YF6XT2OUIMTZ3"
       secret_key = "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"
}
resource "aws_instance" "demo-server" {
          ami = "ami-04e35eeae7a7c5883"
          instance_type = "t2.micro"
          subnet_id = aws_subnet.demo-subnet.id
          vpc_security_group_ids = [aws_security_group.demo-sg.id]
          associate_public_ip_address = true
          key_name = "ubuntu"
         }
resource "aws_vpc" "demo-vpc" {
           cidr_block = "10.10.0.0/16"
         }
# creating subnet
resource "aws_subnet" "demo-subnet" {
          vpc_id     = aws_vpc.demo-vpc.id
          cidr_block = "10.10.1.0/24"

           tags = {
           Name = "main-subnet"
  }
}

# creating IGW
resource "aws_internet_gateway" "vpc-igw" {
  vpc_id = aws_vpc.demo-vpc.id

  tags = {
    Name = "main-igw"
  }
}

#creating Route table
resource "aws_route_table" "demo-rt" {
  vpc_id = aws_vpc.demo-vpc.id
  route{
        cidr_block = "0.0.0.0/0"
        gateway_id = aws_internet_gateway.vpc-igw.id
       }       
      tags = {
             Name = "demo-rt"
}
}

# creating subnet association
resource "aws_route_table_association" "demo-rtassociation" {
  subnet_id      = aws_subnet.demo-subnet.id
  route_table_id = aws_route_table.demo-rt.id
}

# creating security group
resource "aws_security_group" "demo-sg" {
  name        = "demo-sg"
  vpc_id      = aws_vpc.demo-vpc.id

  ingress {
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
 }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "demo-sg"
  }
}